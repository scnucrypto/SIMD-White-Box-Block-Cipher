#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <errno.h>
#include <string.h>
#include <vector>
#define u32 uint32_t;
#define u8 uint8_t;
using namespace std;

static uint8_t sm4_sbox[256] = {
  0xD6, 0x90, 0xE9, 0xFE, 0xCC, 0xE1, 0x3D, 0xB7, 0x16, 0xB6, 0x14, 0xC2, 0x28, 0xFB, 0x2C, 0x05,
  0x2B, 0x67, 0x9A, 0x76, 0x2A, 0xBE, 0x04, 0xC3, 0xAA, 0x44, 0x13, 0x26, 0x49, 0x86, 0x06, 0x99,
  0x9C, 0x42, 0x50, 0xF4, 0x91, 0xEF, 0x98, 0x7A, 0x33, 0x54, 0x0B, 0x43, 0xED, 0xCF, 0xAC, 0x62,
  0xE4, 0xB3, 0x1C, 0xA9, 0xC9, 0x08, 0xE8, 0x95, 0x80, 0xDF, 0x94, 0xFA, 0x75, 0x8F, 0x3F, 0xA6,
  0x47, 0x07, 0xA7, 0xFC, 0xF3, 0x73, 0x17, 0xBA, 0x83, 0x59, 0x3C, 0x19, 0xE6, 0x85, 0x4F, 0xA8,
  0x68, 0x6B, 0x81, 0xB2, 0x71, 0x64, 0xDA, 0x8B, 0xF8, 0xEB, 0x0F, 0x4B, 0x70, 0x56, 0x9D, 0x35,
  0x1E, 0x24, 0x0E, 0x5E, 0x63, 0x58, 0xD1, 0xA2, 0x25, 0x22, 0x7C, 0x3B, 0x01, 0x21, 0x78, 0x87,
  0xD4, 0x00, 0x46, 0x57, 0x9F, 0xD3, 0x27, 0x52, 0x4C, 0x36, 0x02, 0xE7, 0xA0, 0xC4, 0xC8, 0x9E,
  0xEA, 0xBF, 0x8A, 0xD2, 0x40, 0xC7, 0x38, 0xB5, 0xA3, 0xF7, 0xF2, 0xCE, 0xF9, 0x61, 0x15, 0xA1,
  0xE0, 0xAE, 0x5D, 0xA4, 0x9B, 0x34, 0x1A, 0x55, 0xAD, 0x93, 0x32, 0x30, 0xF5, 0x8C, 0xB1, 0xE3,
  0x1D, 0xF6, 0xE2, 0x2E, 0x82, 0x66, 0xCA, 0x60, 0xC0, 0x29, 0x23, 0xAB, 0x0D, 0x53, 0x4E, 0x6F,
  0xD5, 0xDB, 0x37, 0x45, 0xDE, 0xFD, 0x8E, 0x2F, 0x03, 0xFF, 0x6A, 0x72, 0x6D, 0x6C, 0x5B, 0x51,
  0x8D, 0x1B, 0xAF, 0x92, 0xBB, 0xDD, 0xBC, 0x7F, 0x11, 0xD9, 0x5C, 0x41, 0x1F, 0x10, 0x5A, 0xD8,
  0x0A, 0xC1, 0x31, 0x88, 0xA5, 0xCD, 0x7B, 0xBD, 0x2D, 0x74, 0xD0, 0x12, 0xB8, 0xE5, 0xB4, 0xB0,
  0x89, 0x69, 0x97, 0x4A, 0x0C, 0x96, 0x77, 0x7E, 0x65, 0xB9, 0xF1, 0x09, 0xC5, 0x6E, 0xC6, 0x84,
  0x18, 0xF0, 0x7D, 0xEC, 0x3A, 0xDC, 0x4D, 0x20, 0x79, 0xEE, 0x5F, 0x3E, 0xD7, 0xCB, 0x39, 0x48
};
static uint8_t sm4_invsbox[256] =
{
  0x71, 0x6C, 0x7A, 0xB8, 0x16, 0x0F, 0x1E, 0x41, 0x35, 0xEB, 0xD0, 0x2A, 0xE4, 0xAC, 0x62, 0x5A,
  0xCD, 0xC8, 0xDB, 0x1A, 0x0A, 0x8E, 0x08, 0x46, 0xF0, 0x4B, 0x96, 0xC1, 0x32, 0xA0, 0x60, 0xCC,
  0xF7, 0x6D, 0x69, 0xAA, 0x61, 0x68, 0x1B, 0x76, 0x0C, 0xA9, 0x14, 0x10, 0x0E, 0xD8, 0xA3, 0xB7,
  0x9B, 0xD2, 0x9A, 0x28, 0x95, 0x5F, 0x79, 0xB2, 0x86, 0xFE, 0xF4, 0x6B, 0x4A, 0x06, 0xFB, 0x3E,
  0x84, 0xCB, 0x21, 0x2B, 0x19, 0xB3, 0x72, 0x40, 0xFF, 0x1C, 0xE3, 0x5B, 0x78, 0xF6, 0xAE, 0x4E,
  0x22, 0xBF, 0x77, 0xAD, 0x29, 0x97, 0x5D, 0x73, 0x65, 0x49, 0xCE, 0xBE, 0xCA, 0x92, 0x63, 0xFA,
  0xA7, 0x8D, 0x2F, 0x64, 0x55, 0xE8, 0xA5, 0x11, 0x50, 0xE1, 0xBA, 0x51, 0xBD, 0xBC, 0xED, 0xAF,
  0x5C, 0x54, 0xBB, 0x45, 0xD9, 0x3C, 0x13, 0xE6, 0x6E, 0xF8, 0x27, 0xD6, 0x6A, 0xF2, 0xE7, 0xC7,
  0x38, 0x52, 0xA4, 0x48, 0xEF, 0x4D, 0x1D, 0x6F, 0xD3, 0xE0, 0x82, 0x57, 0x9D, 0xC0, 0xB6, 0x3D,
  0x01, 0x24, 0xC3, 0x99, 0x3A, 0x37, 0xE5, 0xE2, 0x26, 0x1F, 0x12, 0x94, 0x20, 0x5E, 0x7F, 0x74,
  0x7C, 0x8F, 0x67, 0x88, 0x93, 0xD4, 0x3F, 0x42, 0x4F, 0x33, 0x18, 0xAB, 0x2E, 0x98, 0x91, 0xC2,
  0xDF, 0x9E, 0x53, 0x31, 0xDE, 0x87, 0x09, 0x07, 0xDC, 0xE9, 0x47, 0xC4, 0xC6, 0xD7, 0x15, 0x81,
  0xA8, 0xD1, 0x0B, 0x17, 0x7D, 0xEC, 0xEE, 0x85, 0x7E, 0x34, 0xA6, 0xFD, 0x04, 0xD5, 0x8B, 0x2D,
  0xDA, 0x66, 0x83, 0x75, 0x70, 0xB0, 0x00, 0xFC, 0xCF, 0xC9, 0x56, 0xB1, 0xF5, 0xC5, 0xB4, 0x39,
  0x90, 0x05, 0xA2, 0x9F, 0x30, 0xDD, 0x4C, 0x7B, 0x36, 0x02, 0x80, 0x59, 0xF3, 0x2C, 0xF9, 0x25,
  0xF1, 0xEA, 0x8A, 0x44, 0x23, 0x9C, 0xA1, 0x89, 0x58, 0x8C, 0x3B, 0x0D, 0x43, 0xB5, 0x03, 0xB9
};
uint32_t A1[4][4] = {
    0x00,0x01,0x01,0x01,
    0x01,0x01,0x01,0x01,
    0x01,0x00,0x01,0x00,
    0x01,0x00,0x00,0x01 };
uint32_t A3[4][4] = {
    0x01,0x00,0x01,0x01,
    0x01,0x00,0x01,0x00,
    0x01,0x00,0x00,0x01,
    0x01,0x01,0x00,0x00 };
uint32_t k = 0xf12186f9;
void A1layer(uint32_t in[4], uint32_t out[4])
{
    uint32_t temp0 = in[1] ^ in[2] ^ in[3] ^ k;
    uint32_t temp1 = in[0] ^ in[1] ^ in[2] ^ in[3] ^ k;
    uint32_t temp2 = in[0] ^ in[2];
    uint32_t temp3 = in[0] ^ in[3];
    out[0] = temp0; out[1] = temp1; out[2] = temp2; out[3] = temp3;
}
void S1layer(uint32_t in[4], uint32_t out[4])
{
    uint8_t u0 = sm4_sbox[uint8_t(in[0])]; //least
    uint8_t u1 = sm4_sbox[uint8_t(in[0] >> 8)];
    uint8_t u2 = sm4_sbox[uint8_t(in[0] >> 16)];
    uint8_t u3 = sm4_sbox[uint8_t(in[0] >> 24)];
    out[0] = u0 ^ (u1 << 8) ^ (u2 << 16) ^ (u3 << 24);
    out[1] = in[1]; out[2] = in[2]; out[3] = in[3];

}
void A2layer(uint32_t in[4], uint32_t out[4])
{
    uint32_t temp0 = in[0];
    uint32_t temp1 = (in[0] ^ ((in[0] << 2) | (in[0] >> 30)) ^ ((in[0] << 10) | (in[0] >> 22)) ^ ((in[0] << 18) | (in[0] >> 14)) ^ ((in[0] << 24) | (in[0] >> 8))) ^ in[1];
    uint32_t temp2 = in[1] ^ in[2] ^ k;
    uint32_t temp3 = in[1] ^ in[3] ^ k;
    out[0] = temp0; out[1] = temp1; out[2] = temp2; out[3] = temp3;

}
void S2layer(uint32_t in[4], uint32_t out[4])
{
    uint8_t u0 = sm4_invsbox[uint8_t(in[0])]; //least
    uint8_t u1 = sm4_invsbox[uint8_t(in[0] >> 8)];
    uint8_t u2 = sm4_invsbox[uint8_t(in[0] >> 16)];
    uint8_t u3 = sm4_invsbox[uint8_t(in[0] >> 24)];
    out[0] = u0 ^ (u1 << 8) ^ (u2 << 16) ^ (u3 << 24);
    out[1] = in[1]; out[2] = in[2]; out[3] = in[3];
}
void A3layer(uint32_t in[4], uint32_t out[4])
{
    uint32_t temp0 = in[0] ^ in[2] ^ in[3] ^ k;
    uint32_t temp1 = in[0] ^ in[2] ^ k;
    uint32_t temp2 = in[0] ^ in[3] ^ k;
    uint32_t temp3 = in[0] ^ in[1];
    out[0] = temp0; out[1] = temp1; out[2] = temp2; out[3] = temp3;
}
int main()
{
    uint32_t input[4] = { 0x01234567,0x89abcdef,0xfedcba98,0x76543210 };
    uint32_t output[4], output1[4], output2[4], output3[4], output4[4];
    A1layer(input, output);
    S1layer(output, output1);
    A2layer(output1, output2);
    S2layer(output2, output3);
    A3layer(output3, output4);
    printf("the output of round 1 is %08X,%08X,%08X,%08X\n", output4[0], output4[1], output4[2], output4[3]);

    return 0;
}